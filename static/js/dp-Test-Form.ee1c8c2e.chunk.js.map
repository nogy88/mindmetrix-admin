{"version":3,"file":"static/js/dp-Test-Form.ee1c8c2e.chunk.js","mappings":"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","sources":["modules/test/views/Test/FactorForm.js","modules/test/views/Test/FactorList.js","modules/test/views/Test/FactorResultForm.js","modules/test/views/Test/FactorResultList.js","modules/test/views/Test/Form.js","modules/test/views/Test/GroupForm.js","modules/test/views/Test/MatrixForm.js","modules/test/views/Test/PageForm.js","modules/test/views/Test/QuestionForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Drawer, message, Form, Row, Skeleton } from \"antd\";\r\nimport { CustomButton, FormItem } from \"components\";\r\nimport { getRequest, postRequest, putRequest } from \"api\";\r\nimport { test, dict } from \"api/endpoints\";\r\n\r\nfunction FactorForm({ visible, handleClose, factorId, refreshTable, testId }) {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [factorType, setFactorType] = useState([]);\r\n  const [eStatus, setEStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getFactor = () => {\r\n      setLoading(true);\r\n      getRequest(`${test.factor}${factorId}`)\r\n        .then((res) => {\r\n          form.setFieldsValue(res.data);\r\n        })\r\n        .catch((error) => {\r\n          message.error(`Алдаа гарлаа. ${error.Message}`);\r\n        })\r\n        .finally(() => setLoading(false));\r\n    };\r\n\r\n    if (factorId !== null) getFactor();\r\n    // eslint-disable-next-line\r\n  }, [factorId]);\r\n\r\n  useEffect(() => {\r\n    const getEFactorTypes = async () => {\r\n      getRequest(`${dict.enum}/EFactorType`)\r\n        .then((res) => {\r\n          setFactorType(res.data);\r\n        })\r\n        .catch((error) => {\r\n          message.error(error.Message);\r\n        });\r\n    };\r\n\r\n    const getEStatus = async () => {\r\n      getRequest(`${dict.enum}/EStatus`)\r\n        .then((res) => {\r\n          setEStatus(res.data);\r\n        })\r\n        .catch((error) => {\r\n          message.error(error.Message);\r\n        });\r\n    };\r\n\r\n    getEFactorTypes();\r\n    getEStatus();\r\n  }, []);\r\n\r\n  const onSubmit = async () => {\r\n    form\r\n      .validateFields()\r\n      .then(async (values) => {\r\n        setLoading(true);\r\n        if (factorId) {\r\n          await putRequest(test.factor, {\r\n            ...values,\r\n            factorId: factorId,\r\n            testId: testId,\r\n          });\r\n        } else {\r\n          await postRequest(test.factor, {\r\n            ...values,\r\n            testId: testId,\r\n          });\r\n        }\r\n        message.success(\"Амжилттай хадгаллаа.\");\r\n        refreshTable();\r\n        setLoading(false);\r\n        handleClose();\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.Message);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const setInitial = () => {\r\n    handleClose();\r\n    form.resetFields();\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      visible={visible}\r\n      title={factorId ? \"Хүчин зүйл засах\" : \"Хүчин зүйл нэмэх\"}\r\n      placement={\"right\"}\r\n      closable={false}\r\n      onClose={setInitial}\r\n      width={400}\r\n      footer={\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <CustomButton onClick={() => onSubmit()} />\r\n        </div>\r\n      }\r\n      key={\"factor\"}\r\n    >\r\n      <Skeleton loading={loading}>\r\n        <Form\r\n          layout=\"vertical\"\r\n          hideRequiredMark\r\n          // size=\"small\"\r\n          scrollToFirstError\r\n          form={form}\r\n        >\r\n          <Row justify=\"center\" gutter={32}>\r\n            <FormItem label=\"Нэр\" name={\"name\"} required />\r\n            <FormItem\r\n              itemType=\"select\"\r\n              label=\"Хүчин зүйлийн төрөл\"\r\n              name={\"factorType\"}\r\n              dtsrc={factorType}\r\n              required\r\n            />\r\n            <FormItem\r\n              label=\"Боломжит оноо\"\r\n              name={\"scorePossible\"}\r\n              itemType=\"number\"\r\n              required\r\n            />\r\n            <FormItem\r\n              label=\"Эрэмбэ\"\r\n              name={\"orderNo\"}\r\n              itemType=\"number\"\r\n              required\r\n            />\r\n            <FormItem\r\n              itemType=\"select\"\r\n              label=\"Төлөв\"\r\n              name={\"status\"}\r\n              dtsrc={eStatus}\r\n              required\r\n            />\r\n          </Row>\r\n        </Form>\r\n      </Skeleton>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default FactorForm;\r\n","import React, { useState } from \"react\";\r\nimport { Tag } from \"antd\";\r\nimport { CustomTable } from \"components\";\r\nimport { test } from \"api/endpoints\";\r\nimport FactorForm from \"./FactorForm\";\r\nimport FactorResultList from \"./FactorResultList\";\r\n\r\nfunction FactorList({ refresh, setRefresh, testId }) {\r\n  const [factorForm, setFactorForm] = useState({\r\n    visible: false,\r\n    factorId: null,\r\n  });\r\n\r\n  const columns = [\r\n    // {\r\n    //   title: \"Код\",\r\n    //   textAlign: \"center\",\r\n    //   dataIndex: \"factorId\",\r\n    // },\r\n    {\r\n      title: \"Нэр\",\r\n      dataIndex: \"name\",\r\n    },\r\n    {\r\n      title: \"Хүчин зүйлийн төрөл\",\r\n      textAlign: \"left\",\r\n      dataIndex: \"factorType\",\r\n    },\r\n    {\r\n      title: \"Боломжит оноо\",\r\n      textAlign: \"center\",\r\n      dataIndex: \"scorePossible\",\r\n    },\r\n    {\r\n      title: \"Эрэмбэ\",\r\n      textAlign: \"center\",\r\n      dataIndex: \"orderNo\",\r\n    },\r\n    {\r\n      title: \"Төлөв\",\r\n      dataIndex: \"status\",\r\n      render: (val) =>\r\n        val === \"A\" ? (\r\n          <Tag color=\"blue\">Идэвхтэй</Tag>\r\n        ) : val === \"I\" ? (\r\n          <Tag color=\"red\">Идэвхгүй</Tag>\r\n        ) : null,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <CustomTable\r\n        title={\"Хүчин зүйлсийн жагсаалт\"}\r\n        primaryKey={[\"factorId\"]}\r\n        columns={columns}\r\n        endpoint={test.factor}\r\n        endpoints={test.factors}\r\n        addFunc={() => setFactorForm({ factorId: null, visible: true })}\r\n        onEdit={(val) => setFactorForm({ factorId: val, visible: true })}\r\n        refresh={refresh}\r\n        expandable={{\r\n          expandedRowRender: (record) => (\r\n            <FactorResultList factorId={record.factorId} />\r\n          ),\r\n          // rowExpandable: (record) => record.questionType !== \"Write\",\r\n        }}\r\n        rowKey={(record) => record.factorId}\r\n      />\r\n      <FactorForm\r\n        visible={factorForm.visible}\r\n        factorId={factorForm.factorId}\r\n        handleClose={() => setFactorForm({ factorId: null, visible: false })}\r\n        refreshTable={setRefresh}\r\n        testId={testId}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FactorList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Drawer, message, Form, Row, Skeleton } from \"antd\";\r\nimport { CustomButton, FormItem } from \"components\";\r\nimport { getRequest, postRequest, putRequest } from \"api\";\r\nimport { test } from \"api/endpoints\";\r\n\r\nfunction FactorResultForm({\r\n  visible,\r\n  factorId,\r\n  resultId,\r\n  handleClose,\r\n  refreshTable,\r\n}) {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getFactorResult = () => {\r\n      setLoading(true);\r\n      getRequest(`${test.factorResult}${resultId}`)\r\n        .then((res) => {\r\n          form.setFieldsValue(res.data);\r\n        })\r\n        .catch((error) => {\r\n          message.error(`Алдаа гарлаа. ${error.Message}`);\r\n        })\r\n        .finally(() => setLoading(false));\r\n    };\r\n\r\n    if (resultId !== null) getFactorResult();\r\n    // eslint-disable-next-line\r\n  }, [resultId]);\r\n\r\n  const onSubmit = async () => {\r\n    form\r\n      .validateFields()\r\n      .then(async (values) => {\r\n        setLoading(true);\r\n        if (resultId) {\r\n          await putRequest(test.factorResult, {\r\n            ...values,\r\n            factorId: factorId,\r\n            resultId: resultId,\r\n          });\r\n        } else {\r\n          await postRequest(test.factorResult, {\r\n            ...values,\r\n            factorId: factorId,\r\n          });\r\n        }\r\n        message.success(\"Амжилттай хадгаллаа.\");\r\n        refreshTable();\r\n        setLoading(false);\r\n        handleClose();\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.Message);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const setInitial = () => {\r\n    handleClose();\r\n    form.resetFields();\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      visible={visible}\r\n      title={\r\n        resultId ? \"Хүчин зүйлийн үр дүн засах\" : \"Хүчин зүйлийн үр дүн нэмэх\"\r\n      }\r\n      placement={\"right\"}\r\n      closable={false}\r\n      onClose={setInitial}\r\n      width={400}\r\n      footer={\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <CustomButton onClick={() => onSubmit()} />\r\n        </div>\r\n      }\r\n      key={\"factor\"}\r\n    >\r\n      <Skeleton loading={loading}>\r\n        <Form\r\n          layout=\"vertical\"\r\n          hideRequiredMark\r\n          // size=\"small\"\r\n          scrollToFirstError\r\n          form={form}\r\n        >\r\n          <Row justify=\"center\" gutter={32}>\r\n            <FormItem label=\"Тайлбар\" name={\"desc\"} required />\r\n            <FormItem\r\n              label=\"Доод оноо\"\r\n              name={\"scoreMin\"}\r\n              itemType=\"number\"\r\n              required\r\n            />\r\n            <FormItem\r\n              label=\"Дээд оноо\"\r\n              name={\"scoreMax\"}\r\n              itemType=\"number\"\r\n              required\r\n            />\r\n          </Row>\r\n        </Form>\r\n      </Skeleton>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default FactorResultForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Popconfirm, Tag, message } from \"antd\";\r\nimport { getRequest, deleteRequest } from \"api\";\r\nimport { test } from \"api/endpoints\";\r\nimport { CustomTable, TableHeader } from \"components\";\r\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport FactorResultForm from \"./FactorResultForm\";\r\n\r\nfunction FactorResultList({ factorId }) {\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [factorResults, setFactorResults] = useState([]);\r\n  const [modalData, setModalData] = useState({\r\n    visible: false,\r\n    resultId: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getFactorResults = () => {\r\n      setLoading(true);\r\n      getRequest(test.factorResults, {\r\n        factorId: factorId,\r\n        Pid: 1,\r\n        Psize: 100,\r\n      })\r\n        .then((res) => {\r\n          setFactorResults(res.data.results);\r\n          console.log(res.data.results);\r\n        })\r\n        .catch((error) => {\r\n          message.error(`Алдаа гарлаа. ${error.Message}`);\r\n        })\r\n        .finally(() => setLoading(false));\r\n    };\r\n\r\n    if (factorId !== null) getFactorResults();\r\n  }, [factorId, refresh]);\r\n\r\n  const handleDelete = (id) => {\r\n    deleteRequest(`${test.feelingAnswer}${id}`)\r\n      .then((res) => {\r\n        message.success(\"Мэдээллийг амжилттай устгалаа.\");\r\n        // to fetch data\r\n        setRefresh(!refresh);\r\n      })\r\n      .catch((err) => {\r\n        message.error(`Алдаа гарлаа: ${err.Message}`);\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    // {\r\n    //   title: \"Код\",\r\n    //   dataIndex: \"resultId\",\r\n    //   width: \"10%\",\r\n    //   align: \"center\",\r\n    // },\r\n    {\r\n      title: \"Тайлбар\",\r\n      dataIndex: \"desc\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Доод оноо\",\r\n      dataIndex: \"scoreMin\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Дээд оноо\",\r\n      dataIndex: \"scoreMax\",\r\n      align: \"center\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div style={{ padding: \"10px 40px\" }}>\r\n      <CustomTable\r\n        title={\"Хүчин зүйлийн үр дүн\"}\r\n        primaryKey={[\"resultId\"]}\r\n        columns={columns}\r\n        endpoint={test.factorResult}\r\n        endpoints={test.factorResults}\r\n        addFunc={() => setModalData({ resultId: null, visible: true })}\r\n        onEdit={(val) => setModalData({ resultId: val, visible: true })}\r\n        otherFilters={{ factorId: factorId }}\r\n        refresh={refresh}\r\n      />\r\n      {/* <Table\r\n        columns={columns}\r\n        dataSource={factorResults}\r\n        rowKey={(record) => record.resultId}\r\n        loading={loading}\r\n        size=\"small\"\r\n        // bordered\r\n        title={() => {\r\n          return (\r\n            <TableHeader\r\n              title=\"Хүчин зүйлийн үр дүн\"\r\n              addFunc={() => {\r\n                setModalData({ resultId: null, visible: true });\r\n              }}\r\n            />\r\n          );\r\n        }}\r\n      /> */}\r\n      <FactorResultForm\r\n        visible={modalData.visible}\r\n        factorId={factorId}\r\n        resultId={modalData.resultId}\r\n        handleClose={() => setModalData({ resultId: null, visible: false })}\r\n        refreshTable={() => setRefresh(!refresh)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FactorResultList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Col, Form, Row, Upload, Typography, message, Divider } from \"antd\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { FormItem, Page, CustomButton } from \"components\";\r\nimport { getRequest, postRequest, putRequest } from \"api\";\r\nimport { dict, test, uploadFile } from \"api/endpoints\";\r\nimport { UploadOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport FactorForm from \"./FactorForm\";\r\nimport FactorList from \"./FactorList\";\r\nimport GroupForm from \"./GroupForm\";\r\nimport PageForm from \"./PageForm\";\r\nimport MatrixForm from \"./MatrixForm\";\r\nimport QuestionForm from \"./QuestionForm\";\r\nconst { Title } = Typography;\r\n\r\nconst TestForm = () => {\r\n  let { testId } = useParams();\r\n  const initialState = {\r\n    mode: \"NEW\",\r\n    data: {},\r\n    imageRespone: \"\",\r\n    image: { src: \"\", isUpdated: false },\r\n    loading: false,\r\n  };\r\n  const [state, setState] = useState(initialState);\r\n  const [refresh, setRefresh] = useState({\r\n    factor: false,\r\n  });\r\n  const [formModal, setFormModal] = useState({\r\n    factorForm: {\r\n      visible: false,\r\n      factorId: null,\r\n    },\r\n    pageForm: {\r\n      visible: false,\r\n      groupId: null,\r\n    },\r\n    groupForm: {\r\n      visible: false,\r\n      groupId: null,\r\n    },\r\n    matrixForm: {\r\n      visible: false,\r\n      matrixId: null,\r\n    },\r\n    questionForm: {\r\n      visible: false,\r\n      questionId: null,\r\n    },\r\n  });\r\n  const [selectedTestCats, setSelectedTestCats] = useState([]);\r\n  const [testCats, setTestCats] = useState([]);\r\n  const [testAges, setTestAges] = useState([]);\r\n  const [selectedTestAges, setSelectedTestAges] = useState([]);\r\n  const [form] = Form.useForm();\r\n\r\n  const breadcrumb = [\r\n    {\r\n      icon: \"BarsOutlined\",\r\n      href: null,\r\n      text: \"Тест\",\r\n    },\r\n    {\r\n      icon: \"BarsOutlined\",\r\n      href: test.tests,\r\n      text: \"Тестийн жагсаалт\",\r\n    },\r\n    {\r\n      icon: \"BarsOutlined\",\r\n      href: null,\r\n      text: state.mode === \"NEW\" ? \"Тест нэмэх\" : \"Тест засах\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const getTestCats = async () => {\r\n      getRequest(`${dict.table}/Category`)\r\n        .then((res) => {\r\n          setTestCats(res.data);\r\n        })\r\n        .catch((error) => {\r\n          message.error(error.Message);\r\n        });\r\n    };\r\n    const getTestAges = async () => {\r\n      getRequest(`${dict.enum}/EAgeType`)\r\n        .then((res) => {\r\n          setTestAges(res.data);\r\n        })\r\n        .catch((error) => {\r\n          message.error(error.Message);\r\n        });\r\n    };\r\n\r\n    getTestCats();\r\n    getTestAges();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setState({ ...state, loading: true });\r\n      const res = await getRequest(`${test.test}${testId}`);\r\n      setState({\r\n        mode: \"EDIT\",\r\n        loading: false,\r\n        data: res.data,\r\n        imageRespone:\r\n          \"https://animemotivation.com/wp-content/uploads/2022/06/Manager-jahy-oppai-500x500.jpg\",\r\n      });\r\n\r\n      console.log(\"res \", res.data);\r\n      form.setFieldsValue(res.data);\r\n    } catch (error) {\r\n      setState({ ...state, loading: false });\r\n      message.error(error?.Message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (testId !== \"new\") {\r\n      fetchData();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [testId]);\r\n\r\n  function getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  const imgHandleChange = async ({ file }) => {\r\n    try {\r\n      const formData = new FormData();\r\n      await formData.append(\"File\", file.originFileObj);\r\n      const res = await postRequest(uploadFile.uploadFile, formData);\r\n      if (file.status === \"uploading\") {\r\n        setState({ ...state, loading: true, imageRespone: res.data });\r\n        return;\r\n      }\r\n      if (file.status === \"done\") {\r\n        getBase64(file.originFileObj, (imageUrl) =>\r\n          setState({\r\n            ...state,\r\n            image: { src: imageUrl, isUpdated: true },\r\n            loading: false,\r\n            imageRespone: res.data,\r\n          })\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"caught an error\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const submit = async () => {\r\n    form\r\n      .validateFields()\r\n      .then(async (values) => {\r\n        if (state.mode === \"EDIT\") {\r\n          await putRequest(test.test, {\r\n            ...values,\r\n            testId: testId,\r\n            // ...(state.image.isUpdated && {\r\n            //   img: state.imageRespone,\r\n            // }),\r\n          });\r\n          message.success(\"put\");\r\n        } else {\r\n          message.success(\"post\");\r\n          let tempCats = [];\r\n          selectedTestCats.map((cat) => tempCats.push({ categoryId: cat }));\r\n          let tempTestAges = [];\r\n          selectedTestAges.map((age) => tempTestAges.push({ ageType: age }));\r\n          let tempCat = [];\r\n          selectedTestCats.map((cat) => tempCat.push({ categoryId: cat }));\r\n\r\n          await postRequest(test.test, {\r\n            ...values,\r\n            ...(state.image.isUpdated && {\r\n              img: state.imageRespone,\r\n            }),\r\n            testCategorys: tempCat,\r\n          });\r\n        }\r\n        message.success(\"Мэдээллийг амжилттай хадгаллаа.\");\r\n      })\r\n      .catch((err) => {\r\n        setState({ loading: false });\r\n        message.error(\"Талбарын утгаа шалгана уу!\");\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <Page breadcrumb={breadcrumb}>\r\n        <Col\r\n          span={24}\r\n          style={{\r\n            border: \"1px solid #eee\",\r\n            boxShadow: \"1px 1px 10px #eee\",\r\n            padding: \"20px\",\r\n          }}\r\n        >\r\n          <Title level={3}>Үндсэн мэдээлэл</Title>\r\n          <Form form={form} layout=\"vertical\">\r\n            <Row gutter={[32, 4]}>\r\n              <Col span={8} style={{ paddingRight: \"20px\" }}>\r\n                <Form.Item label=\"Зураг\">\r\n                  <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"test-upload\"\r\n                    showUploadList={false}\r\n                    customRequest={({ file, onSuccess }) => {\r\n                      console.log(\"file->\", file);\r\n                      setTimeout(() => {\r\n                        onSuccess(\"ok\");\r\n                      }, 0.5);\r\n                    }}\r\n                    // beforeUpload={beforeUpload}\r\n                    onChange={imgHandleChange}\r\n                  >\r\n                    {state.imageRespone ? (\r\n                      <img\r\n                        src={state.imageRespone}\r\n                        alt=\"avatar\"\r\n                        style={{\r\n                          width: \"100%\",\r\n                          height: \"100%\",\r\n                          objectFit: \"contain\",\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <div>\r\n                        {state.loading ? (\r\n                          <LoadingOutlined />\r\n                        ) : (\r\n                          <UploadOutlined />\r\n                        )}\r\n                        <div style={{ marginTop: 8 }}>Зураг оруулах</div>\r\n                      </div>\r\n                    )}\r\n                  </Upload>\r\n                </Form.Item>\r\n\r\n                <FormItem\r\n                  label=\"Жишээ тайлан (PDF)\"\r\n                  name={\"exampleReport\"}\r\n                  span={24}\r\n                />\r\n              </Col>\r\n\r\n              <Col span={16}>\r\n                <Row gutter={[16, 4]}>\r\n                  <FormItem\r\n                    label=\"Тестийн нэр\"\r\n                    name={\"name\"}\r\n                    span={8}\r\n                    required\r\n                  />\r\n                  <FormItem\r\n                    label=\"Тестийн категори\"\r\n                    name={\"testCategorys\"}\r\n                    itemType=\"multipleSelect\"\r\n                    selected={selectedTestCats}\r\n                    setSelected={(val) => setSelectedTestCats(val)}\r\n                    dtsrc={testCats}\r\n                    span={8}\r\n                    // required\r\n                  />\r\n                  <FormItem\r\n                    label=\"Насны ангилал\"\r\n                    name={\"testAges\"}\r\n                    dtsrc={testAges}\r\n                    itemType=\"multipleSelect\"\r\n                    selected={selectedTestAges}\r\n                    setSelected={setSelectedTestAges}\r\n                    span={8}\r\n                    // required\r\n                  />\r\n                  <FormItem\r\n                    label=\"Тестийн товч тайлбар, зориулалт\"\r\n                    name={\"desc\"}\r\n                    span={8}\r\n                    required\r\n                  />\r\n                  <FormItem\r\n                    label=\"Зарцуулах хугацаа\"\r\n                    itemType={\"number\"}\r\n                    name={\"minute\"}\r\n                    required\r\n                    span={8}\r\n                  />\r\n                  <FormItem\r\n                    label=\"Зориулалт\"\r\n                    name={\"testAges\"}\r\n                    dtsrc={testAges}\r\n                    itemType=\"multipleSelect\"\r\n                    selected={selectedTestAges}\r\n                    setSelected={setSelectedTestAges}\r\n                    span={8}\r\n                    // required\r\n                  />\r\n                  <FormItem\r\n                    label={\"Тест эхлэхийн өмнөх анхааруулга\"}\r\n                    name=\"beforeDesc\"\r\n                    span={8}\r\n                  />\r\n                  <FormItem\r\n                    label={\"Тестийн дууссаны дараах зөвлөмж\"}\r\n                    name=\"afterDesc\"\r\n                    span={8}\r\n                  />\r\n                  <FormItem label=\"Эрэмбэ\" name={\"orderNo\"} required span={8} />\r\n                  <FormItem\r\n                    label=\"Үйлчилгээний төлбөр (Хувь хүн)\"\r\n                    name={\"pricePerson\"}\r\n                    itemType={\"number\"}\r\n                    required\r\n                    span={8}\r\n                  />\r\n                  <FormItem\r\n                    label=\"Үйлчилгээний төлбөр (Судлаач)\"\r\n                    name={\"price\"}\r\n                    itemType=\"number\"\r\n                    required\r\n                    span={8}\r\n                  />\r\n                  <FormItem\r\n                    label=\"Тестийг дахин өгөх боломжтой эсэх\"\r\n                    name={\"isRepeat\"}\r\n                    itemType={\"radio\"}\r\n                    required\r\n                    span={8}\r\n                  />\r\n                  <FormItem\r\n                    label=\"Тестийг дахин хийх хугацаа\"\r\n                    name={\"repeatMount\"}\r\n                    itemType={\"number\"}\r\n                    required\r\n                    span={8}\r\n                  />\r\n\r\n                  <FormItem\r\n                    label=\"Сонгон шалгаруулалтын тест эсэх\"\r\n                    name={\"isSelection\"}\r\n                    itemType={\"radio\"}\r\n                    required\r\n                    span={8}\r\n                  />\r\n                  <FormItem\r\n                    label=\"Асуултыг холих эсэх\"\r\n                    name={\"isQuestionShuffle\"}\r\n                    itemType={\"radio\"}\r\n                    required\r\n                    span={8}\r\n                  />\r\n                  <FormItem\r\n                    span={8}\r\n                    itemType=\"select\"\r\n                    label=\"Тестийн төлөв\"\r\n                    name={\"status\"}\r\n                    dtsrc={[\r\n                      {\r\n                        val: \"A\",\r\n                        txt: \"Идэвхтэй\",\r\n                        orderNo: 1,\r\n                        filter: null,\r\n                        filter2: null,\r\n                      },\r\n                      {\r\n                        val: \"I\",\r\n                        txt: \"Идэвхгүй\",\r\n                        orderNo: 2,\r\n                        filter: null,\r\n                        filter2: null,\r\n                      },\r\n                    ]}\r\n                    required\r\n                  />\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n\r\n            <FormItem span={24} itemType=\"button\" onClick={() => submit()} />\r\n          </Form>\r\n        </Col>\r\n\r\n        <Divider />\r\n\r\n        {/* Хүчин зүйлс */}\r\n        <div\r\n          style={{\r\n            padding: \"20px\",\r\n            minHeight: \"280px\",\r\n            border: \"1px solid #eee\",\r\n            boxShadow: \"1px 1px 10px #eee\",\r\n          }}\r\n        >\r\n          <Title level={3}>Хүчин зүйлс</Title>\r\n          <FactorList\r\n            refresh={refresh.factor}\r\n            setRefresh={() =>\r\n              setRefresh({ ...refresh, factor: !refresh.factor })\r\n            }\r\n          />\r\n          <CustomButton\r\n            onClick={() => {\r\n              setFormModal({\r\n                ...formModal,\r\n                factorForm: { factorId: null, visible: true },\r\n              });\r\n            }}\r\n            btntext=\"Хүчин зүйл нэмэх\"\r\n            type=\"dashed\"\r\n          />\r\n          <FactorForm\r\n            visible={formModal.factorForm.visible}\r\n            factorId={formModal.factorForm.factorId}\r\n            handleClose={() =>\r\n              setFormModal({\r\n                ...formModal,\r\n                factorForm: { factorId: null, visible: false },\r\n              })\r\n            }\r\n            refreshTable={() =>\r\n              setRefresh({ ...refresh, factor: !refresh.factor })\r\n            }\r\n            testId={testId}\r\n          />\r\n        </div>\r\n\r\n        <Divider />\r\n\r\n        {/* Other */}\r\n        <div\r\n          style={{\r\n            padding: \"20px\",\r\n            // minHeight: \"280px\",\r\n            border: \"1px solid #eee\",\r\n            boxShadow: \"1px 1px 10px #eee\",\r\n          }}\r\n        >\r\n          {/* <Title level={3}>Асуулт</Title> */}\r\n          <Row>\r\n            <CustomButton\r\n              btntext=\"Хуудас нэмэх\"\r\n              type=\"ghost\"\r\n              styles={{ marginRight: \"16px\" }}\r\n              onClick={() => {\r\n                setFormModal({\r\n                  ...formModal,\r\n                  pageForm: { groupId: null, visible: true },\r\n                });\r\n              }}\r\n            />\r\n            <CustomButton\r\n              btntext=\"Групп нэмэх\"\r\n              type=\"ghost\"\r\n              styles={{ marginRight: \"16px\" }}\r\n              onClick={() => {\r\n                setFormModal({\r\n                  ...formModal,\r\n                  groupForm: { groupId: null, visible: true },\r\n                });\r\n              }}\r\n            />\r\n            <CustomButton\r\n              btntext=\"Матрикс нэмэх\"\r\n              type=\"ghost\"\r\n              styles={{ marginRight: \"16px\" }}\r\n              onClick={() => {\r\n                setFormModal({\r\n                  ...formModal,\r\n                  matrixForm: { matrixId: null, visible: true },\r\n                });\r\n              }}\r\n            />\r\n            <CustomButton\r\n              btntext=\"Асуулт нэмэх\"\r\n              // type=\"ghost\"\r\n              styles={{ marginRight: \"16px\" }}\r\n              onClick={() => {\r\n                setFormModal({\r\n                  ...formModal,\r\n                  questionForm: { questionId: null, visible: true },\r\n                });\r\n              }}\r\n            />\r\n          </Row>\r\n\r\n          {/* Асуултын жагсаалт */}\r\n          <Row style={{ padding: \"20px\" }}>\r\n            {state?.data?.questions?.map((el) => (\r\n              <Col span={24}>{el.questionTxt}</Col>\r\n            ))}\r\n            {formModal.questionForm.visible && (\r\n              <QuestionForm\r\n                visible={formModal.questionForm.visible}\r\n                questionId={formModal.questionForm.questionId}\r\n                handleClose={() =>\r\n                  setFormModal({\r\n                    ...formModal,\r\n                    questionForm: { questionId: null, visible: false },\r\n                  })\r\n                }\r\n                refreshTable={() => fetchData()}\r\n                testId={testId}\r\n              />\r\n            )}\r\n          </Row>\r\n\r\n          {/* Forms */}\r\n          <PageForm\r\n            visible={formModal.pageForm.visible}\r\n            groupId={formModal.pageForm.groupId}\r\n            handleClose={() =>\r\n              setFormModal({\r\n                ...formModal,\r\n                pageForm: { groupId: null, visible: false },\r\n              })\r\n            }\r\n            refreshTable={() => fetchData()}\r\n            testId={testId}\r\n          />\r\n          <GroupForm\r\n            visible={formModal.groupForm.visible}\r\n            groupId={formModal.groupForm.groupId}\r\n            handleClose={() =>\r\n              setFormModal({\r\n                ...formModal,\r\n                groupForm: { groupId: null, visible: false },\r\n              })\r\n            }\r\n            refreshTable={() => fetchData()}\r\n            testId={testId}\r\n          />\r\n          <MatrixForm\r\n            visible={formModal.matrixForm.visible}\r\n            matrixId={formModal.matrixForm.matrixId}\r\n            handleClose={() =>\r\n              setFormModal({\r\n                ...formModal,\r\n                matrixForm: { matrixId: null, visible: false },\r\n              })\r\n            }\r\n            refreshTable={() => fetchData()}\r\n            testId={testId}\r\n          />\r\n        </div>\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TestForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Drawer, message, Form, Row, Skeleton } from \"antd\";\r\nimport { CustomButton, FormItem } from \"components\";\r\nimport { getRequest, postRequest, putRequest } from \"api\";\r\nimport { test } from \"api/endpoints\";\r\n\r\nfunction GroupForm({ visible, handleClose, groupId, refreshTable, testId }) {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getFactor = () => {\r\n      setLoading(true);\r\n      getRequest(`${test.group}${groupId}`)\r\n        .then((res) => {\r\n          form.setFieldsValue(res.data);\r\n        })\r\n        .catch((error) => {\r\n          message.error(`Алдаа гарлаа. ${error.Message}`);\r\n        })\r\n        .finally(() => setLoading(false));\r\n    };\r\n\r\n    if (groupId !== null) getFactor();\r\n    // eslint-disable-next-line\r\n  }, [groupId]);\r\n\r\n  const onSubmit = async () => {\r\n    form\r\n      .validateFields()\r\n      .then(async (values) => {\r\n        setLoading(true);\r\n        if (groupId) {\r\n          await putRequest(test.group, {\r\n            ...values,\r\n            groupId: groupId,\r\n            testId: testId,\r\n            type: \"Group\",\r\n          });\r\n        } else {\r\n          await postRequest(test.group, {\r\n            ...values,\r\n            testId: testId,\r\n            type: \"Group\",\r\n          });\r\n        }\r\n        message.success(\"Амжилттай хадгаллаа.\");\r\n        refreshTable();\r\n        setLoading(false);\r\n        handleClose();\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.Message);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const setInitial = () => {\r\n    handleClose();\r\n    form.resetFields();\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      visible={visible}\r\n      title={groupId ? \"Групп засах\" : \"Групп нэмэх\"}\r\n      placement={\"right\"}\r\n      closable={false}\r\n      onClose={setInitial}\r\n      width={400}\r\n      footer={\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <CustomButton onClick={() => onSubmit()} />\r\n        </div>\r\n      }\r\n      key={\"group\"}\r\n    >\r\n      <Skeleton loading={loading}>\r\n        <Form\r\n          layout=\"vertical\"\r\n          hideRequiredMark\r\n          // size=\"small\"\r\n          scrollToFirstError\r\n          form={form}\r\n        >\r\n          <Row justify=\"center\" gutter={32}>\r\n            <FormItem label=\"Нэр\" name={\"name\"} required />\r\n\r\n            <FormItem\r\n              itemType=\"radio\"\r\n              label=\"Нэр харагдах эсэх\"\r\n              name={\"isVisibleName\"}\r\n              required\r\n            />\r\n\r\n            <FormItem\r\n              label=\"Тайлбар\"\r\n              name={\"desc\"}\r\n              itemType=\"textarea\"\r\n              required\r\n            />\r\n\r\n            <FormItem\r\n              itemType=\"radio\"\r\n              label=\"Тайлбар харагдах эсэх\"\r\n              name={\"isVisibleDesc\"}\r\n              required\r\n            />\r\n\r\n            <FormItem\r\n              label=\"Эрэмбэ\"\r\n              name={\"orderNo\"}\r\n              itemType=\"number\"\r\n              required\r\n            />\r\n          </Row>\r\n        </Form>\r\n      </Skeleton>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default GroupForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Drawer, message, Form, Row, Skeleton } from \"antd\";\r\nimport { CustomButton, FormItem } from \"components\";\r\nimport { getRequest, postRequest, putRequest } from \"api\";\r\nimport { test } from \"api/endpoints\";\r\n\r\nfunction MatrixForm({ visible, handleClose, matrixId, refreshTable, testId }) {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getFactor = () => {\r\n      setLoading(true);\r\n      getRequest(`${test.matrix}${matrixId}`)\r\n        .then((res) => {\r\n          form.setFieldsValue(res.data);\r\n        })\r\n        .catch((error) => {\r\n          message.error(`Алдаа гарлаа. ${error.Message}`);\r\n        })\r\n        .finally(() => setLoading(false));\r\n    };\r\n\r\n    if (matrixId !== null) getFactor();\r\n    // eslint-disable-next-line\r\n  }, [matrixId]);\r\n\r\n  const onSubmit = async () => {\r\n    form\r\n      .validateFields()\r\n      .then(async (values) => {\r\n        setLoading(true);\r\n        if (matrixId) {\r\n          await putRequest(test.matrix, {\r\n            ...values,\r\n            matrixId: matrixId,\r\n            testId: testId,\r\n          });\r\n        } else {\r\n          await postRequest(test.matrix, {\r\n            ...values,\r\n            testId: testId,\r\n          });\r\n        }\r\n        message.success(\"Амжилттай хадгаллаа.\");\r\n        refreshTable();\r\n        setLoading(false);\r\n        handleClose();\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.Message);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const setInitial = () => {\r\n    handleClose();\r\n    form.resetFields();\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      visible={visible}\r\n      title={matrixId ? \"Матрикс засах\" : \"Матрикс нэмэх\"}\r\n      placement={\"right\"}\r\n      closable={false}\r\n      onClose={setInitial}\r\n      width={400}\r\n      footer={\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <CustomButton onClick={() => onSubmit()} />\r\n        </div>\r\n      }\r\n      key={\"group\"}\r\n    >\r\n      <Skeleton loading={loading}>\r\n        <Form\r\n          layout=\"vertical\"\r\n          hideRequiredMark\r\n          // size=\"small\"\r\n          scrollToFirstError\r\n          form={form}\r\n        >\r\n          <Row justify=\"center\" gutter={32}>\r\n            <FormItem label=\"Нэр\" name={\"name\"} required />\r\n\r\n            <FormItem\r\n              itemType=\"radio\"\r\n              label=\"Нэр харагдах эсэх\"\r\n              name={\"isVisibleName\"}\r\n              required\r\n            />\r\n\r\n            <FormItem\r\n              label=\"Тайлбар\"\r\n              name={\"desc\"}\r\n              itemType=\"textarea\"\r\n              required\r\n            />\r\n\r\n            <FormItem\r\n              itemType=\"radio\"\r\n              label=\"Тайлбар харагдах эсэх\"\r\n              name={\"isVisibleDesc\"}\r\n              required\r\n            />\r\n\r\n            <FormItem\r\n              label=\"Эрэмбэ\"\r\n              name={\"orderNo\"}\r\n              itemType=\"number\"\r\n              required\r\n            />\r\n          </Row>\r\n        </Form>\r\n      </Skeleton>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default MatrixForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Drawer, message, Form, Row, Skeleton } from \"antd\";\r\nimport { CustomButton, FormItem } from \"components\";\r\nimport { getRequest, postRequest, putRequest } from \"api\";\r\nimport { test } from \"api/endpoints\";\r\n\r\nfunction PageForm({ visible, handleClose, groupId, refreshTable, testId }) {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getFactor = () => {\r\n      setLoading(true);\r\n      getRequest(`${test.group}${groupId}`)\r\n        .then((res) => {\r\n          form.setFieldsValue(res.data);\r\n        })\r\n        .catch((error) => {\r\n          message.error(`Алдаа гарлаа. ${error.Message}`);\r\n        })\r\n        .finally(() => setLoading(false));\r\n    };\r\n\r\n    if (groupId !== null) getFactor();\r\n    // eslint-disable-next-line\r\n  }, [groupId]);\r\n\r\n  const onSubmit = async () => {\r\n    form\r\n      .validateFields()\r\n      .then(async (values) => {\r\n        setLoading(true);\r\n        if (groupId) {\r\n          await putRequest(test.group, {\r\n            ...values,\r\n            groupId: groupId,\r\n            testId: testId,\r\n            type: \"Page\",\r\n          });\r\n        } else {\r\n          await postRequest(test.group, {\r\n            ...values,\r\n            testId: testId,\r\n            type: \"Page\",\r\n          });\r\n        }\r\n        message.success(\"Амжилттай хадгаллаа.\");\r\n        refreshTable();\r\n        setLoading(false);\r\n        handleClose();\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.Message);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const setInitial = () => {\r\n    handleClose();\r\n    form.resetFields();\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      visible={visible}\r\n      title={groupId ? \"Хуудас засах\" : \"Хуудас нэмэх\"}\r\n      placement={\"right\"}\r\n      closable={false}\r\n      onClose={setInitial}\r\n      width={400}\r\n      footer={\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <CustomButton onClick={() => onSubmit()} />\r\n        </div>\r\n      }\r\n      key={\"group\"}\r\n    >\r\n      <Skeleton loading={loading}>\r\n        <Form\r\n          layout=\"vertical\"\r\n          hideRequiredMark\r\n          // size=\"small\"\r\n          scrollToFirstError\r\n          form={form}\r\n        >\r\n          <Row justify=\"center\" gutter={32}>\r\n            <FormItem label=\"Нэр\" name={\"name\"} required />\r\n\r\n            <FormItem\r\n              itemType=\"radio\"\r\n              label=\"Нэр харагдах эсэх\"\r\n              name={\"isVisibleName\"}\r\n              required\r\n            />\r\n\r\n            <FormItem\r\n              label=\"Тайлбар\"\r\n              name={\"desc\"}\r\n              itemType=\"textarea\"\r\n              required\r\n            />\r\n\r\n            <FormItem\r\n              itemType=\"radio\"\r\n              label=\"Тайлбар харагдах эсэх\"\r\n              name={\"isVisibleDesc\"}\r\n              required\r\n            />\r\n\r\n            <FormItem\r\n              label=\"Эрэмбэ\"\r\n              name={\"orderNo\"}\r\n              itemType=\"number\"\r\n              required\r\n            />\r\n          </Row>\r\n        </Form>\r\n      </Skeleton>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default PageForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { message, Form, Row, Skeleton, Col } from \"antd\";\r\nimport { CustomButton, FormItem } from \"components\";\r\nimport { getRequest, postRequest, putRequest } from \"api\";\r\nimport { test, dict } from \"api/endpoints\";\r\n\r\nfunction QuestionForm({ questionId, handleClose, refreshTable, testId }) {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [quesType, setQuesType] = useState([]);\r\n  const [eStatus, setEStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getQuestion = () => {\r\n      setLoading(true);\r\n      getRequest(`${test.question}${questionId}`)\r\n        .then((res) => {\r\n          form.setFieldsValue(res.data);\r\n        })\r\n        .catch((error) => {\r\n          message.error(`Алдаа гарлаа. ${error.Message}`);\r\n        })\r\n        .finally(() => setLoading(false));\r\n    };\r\n\r\n    if (questionId !== null) getQuestion();\r\n    // eslint-disable-next-line\r\n  }, [questionId]);\r\n\r\n  useEffect(() => {\r\n    const getsetQuesTypes = async () => {\r\n      getRequest(`${dict.enum}/EQuesType`)\r\n        .then((res) => {\r\n          setQuesType(res.data);\r\n        })\r\n        .catch((error) => {\r\n          message.error(error.Message);\r\n        });\r\n    };\r\n\r\n    const getEStatus = async () => {\r\n      getRequest(`${dict.enum}/EStatus`)\r\n        .then((res) => {\r\n          setEStatus(res.data);\r\n        })\r\n        .catch((error) => {\r\n          message.error(error.Message);\r\n        });\r\n    };\r\n\r\n    getEStatus();\r\n    getsetQuesTypes();\r\n  }, []);\r\n\r\n  const onSubmit = async () => {\r\n    form\r\n      .validateFields()\r\n      .then(async (values) => {\r\n        setLoading(true);\r\n        if (questionId) {\r\n          await putRequest(test.question, {\r\n            ...values,\r\n            questionId: questionId,\r\n            testId: +testId,\r\n          });\r\n        } else {\r\n          await postRequest(test.question, {\r\n            ...values,\r\n            testId: +testId,\r\n            testFactors: [\r\n              {\r\n                factorId: 22,\r\n              },\r\n            ],\r\n          });\r\n        }\r\n        message.success(\"Амжилттай хадгаллаа.\");\r\n        refreshTable();\r\n        setLoading(false);\r\n        handleClose();\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.Message);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const setInitial = () => {\r\n    handleClose();\r\n    form.resetFields();\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <Skeleton loading={loading}>\r\n        <Form\r\n          layout=\"vertical\"\r\n          hideRequiredMark\r\n          // size=\"small\"\r\n          scrollToFirstError\r\n          form={form}\r\n        >\r\n          <Row gutter={32} style={{}}>\r\n            <Col span={16}>\r\n              <Row justify=\"start\" gutter={32}>\r\n                <FormItem\r\n                  itemType=\"select\"\r\n                  label=\"Төрөл\"\r\n                  name={\"quesType\"}\r\n                  dtsrc={quesType}\r\n                  span={8}\r\n                  required\r\n                />\r\n                <FormItem\r\n                  label=\"Асуулт\"\r\n                  name={\"questionTxt\"}\r\n                  span={8}\r\n                  required\r\n                />\r\n\r\n                <FormItem\r\n                  itemType=\"radio\"\r\n                  label=\"Зурагтай эсэх\"\r\n                  name={\"isImg\"}\r\n                  span={8}\r\n                  required\r\n                />\r\n                <FormItem\r\n                  itemType=\"radio\"\r\n                  label=\"Асуулт холих эсэх\"\r\n                  name={\"isAnswerShuffle\"}\r\n                  span={8}\r\n                  required\r\n                />\r\n                <FormItem\r\n                  label=\"Индекс\"\r\n                  name={\"index\"}\r\n                  span={8}\r\n                  itemType=\"number\"\r\n                  required\r\n                />\r\n                <FormItem\r\n                  label=\"Эрэмбэ\"\r\n                  name={\"orderNo\"}\r\n                  itemType=\"number\"\r\n                  span={8}\r\n                  required\r\n                />\r\n                <FormItem\r\n                  itemType=\"select\"\r\n                  label=\"Төлөв\"\r\n                  name={\"status\"}\r\n                  dtsrc={eStatus}\r\n                  span={8}\r\n                  required\r\n                />\r\n              </Row>\r\n            </Col>\r\n            <Col span={8}>\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"yellow\",\r\n                  height: \"100%\",\r\n                  width: \"100%\",\r\n                }}\r\n              ></div>\r\n              {/* <FormItem label=\"Зураг\" name={\"img\"} span={8} required /> */}\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={6} justify=\"end\" style={{ marginTop: \"20px\" }}>\r\n            <Col>\r\n              <CustomButton\r\n                btntext=\"Болих\"\r\n                // styles={{ backgroundColor: \"red\" }}\r\n                onClick={() => handleClose()}\r\n                type=\"ghost\"\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <CustomButton\r\n                btntext=\"Нэмэх\"\r\n                onClick={() => onSubmit()}\r\n                styles={{ backgroundColor: \"#00bf6f\" }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionForm;\r\n"],"names":["visible","handleClose","factorId","refreshTable","testId","Form","form","useState","loading","setLoading","factorType","setFactorType","eStatus","setEStatus","useEffect","getRequest","test","then","res","setFieldsValue","data","catch","error","message","Message","finally","getEFactorTypes","dict","getEStatus","onSubmit","validateFields","values","putRequest","postRequest","title","placement","closable","onClose","resetFields","width","footer","style","textAlign","onClick","layout","hideRequiredMark","scrollToFirstError","justify","gutter","label","name","required","itemType","dtsrc","refresh","setRefresh","factorForm","setFactorForm","columns","dataIndex","render","val","color","primaryKey","endpoint","endpoints","addFunc","onEdit","expandable","expandedRowRender","record","rowKey","resultId","setFactorResults","modalData","setModalData","Pid","Psize","results","console","log","padding","align","otherFilters","Title","Typography","useParams","mode","imageRespone","image","src","isUpdated","state","setState","factor","pageForm","groupId","groupForm","matrixForm","matrixId","questionForm","questionId","formModal","setFormModal","selectedTestCats","setSelectedTestCats","testCats","setTestCats","testAges","setTestAges","selectedTestAges","setSelectedTestAges","breadcrumb","icon","href","text","getTestCats","getTestAges","fetchData","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","imgHandleChange","file","formData","FormData","append","originFileObj","uploadFile","status","imageUrl","submit","tempCats","map","cat","push","categoryId","tempTestAges","age","ageType","tempCat","testCategorys","err","span","border","boxShadow","level","paddingRight","listType","className","showUploadList","customRequest","onSuccess","setTimeout","onChange","alt","height","objectFit","marginTop","selected","setSelected","txt","orderNo","filter","filter2","minHeight","btntext","type","styles","marginRight","questions","el","questionTxt","quesType","setQuesType","getsetQuesTypes","testFactors","backgroundColor"],"sourceRoot":""}