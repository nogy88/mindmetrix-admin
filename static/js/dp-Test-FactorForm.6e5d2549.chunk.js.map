{"version":3,"file":"static/js/dp-Test-FactorForm.6e5d2549.chunk.js","mappings":"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","sources":["modules/test/views/Test/FactorForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Drawer, message, Form, Row, Skeleton } from \"antd\";\r\nimport { CustomButton, FormItem } from \"components\";\r\nimport { getRequest, postRequest, putRequest } from \"api\";\r\nimport { test, dict } from \"api/endpoints\";\r\n\r\nfunction FactorForm({ visible, handleClose, factorId, refreshTable, testId }) {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [factorType, setFactorType] = useState([]);\r\n  const [eStatus, setEStatus] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getFactor = () => {\r\n      setLoading(true);\r\n      getRequest(`${test.factor}${factorId}`)\r\n        .then((res) => {\r\n          form.setFieldsValue(res.data);\r\n        })\r\n        .catch((error) => {\r\n          message.error(`Алдаа гарлаа. ${error.Message}`);\r\n        })\r\n        .finally(() => setLoading(false));\r\n    };\r\n\r\n    if (factorId !== null) getFactor();\r\n    // eslint-disable-next-line\r\n  }, [factorId]);\r\n\r\n  useEffect(() => {\r\n    const getEFactorTypes = async () => {\r\n      getRequest(`${dict.enum}/EFactorType`)\r\n        .then((res) => {\r\n          setFactorType(res.data);\r\n        })\r\n        .catch((error) => {\r\n          message.error(error.Message);\r\n        });\r\n    };\r\n\r\n    const getEStatus = async () => {\r\n      getRequest(`${dict.enum}/EStatus`)\r\n        .then((res) => {\r\n          setEStatus(res.data);\r\n        })\r\n        .catch((error) => {\r\n          message.error(error.Message);\r\n        });\r\n    };\r\n\r\n    getEFactorTypes();\r\n    getEStatus();\r\n  }, []);\r\n\r\n  const onSubmit = async () => {\r\n    form\r\n      .validateFields()\r\n      .then(async (values) => {\r\n        setLoading(true);\r\n        if (factorId) {\r\n          await putRequest(test.factor, {\r\n            ...values,\r\n            factorId: factorId,\r\n            testId: testId,\r\n          });\r\n        } else {\r\n          await postRequest(test.factor, {\r\n            ...values,\r\n            testId: testId,\r\n          });\r\n        }\r\n        message.success(\"Амжилттай хадгаллаа.\");\r\n        refreshTable();\r\n        setLoading(false);\r\n        handleClose();\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.Message);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const setInitial = () => {\r\n    handleClose();\r\n    form.resetFields();\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      visible={visible}\r\n      title={factorId ? \"Хүчин зүйл засах\" : \"Хүчин зүйл нэмэх\"}\r\n      placement={\"right\"}\r\n      closable={false}\r\n      onClose={setInitial}\r\n      width={400}\r\n      footer={\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <CustomButton onClick={() => onSubmit()} />\r\n        </div>\r\n      }\r\n      key={\"factor\"}\r\n    >\r\n      <Skeleton loading={loading}>\r\n        <Form\r\n          layout=\"vertical\"\r\n          hideRequiredMark\r\n          // size=\"small\"\r\n          scrollToFirstError\r\n          form={form}\r\n        >\r\n          <Row justify=\"center\" gutter={32}>\r\n            <FormItem label=\"Нэр\" name={\"name\"} required />\r\n            <FormItem\r\n              itemType=\"select\"\r\n              label=\"Хүчин зүйлийн төрөл\"\r\n              name={\"factorType\"}\r\n              dtsrc={factorType}\r\n              required\r\n            />\r\n            <FormItem\r\n              label=\"Боломжит оноо\"\r\n              name={\"scorePossible\"}\r\n              itemType=\"number\"\r\n              required\r\n            />\r\n            <FormItem\r\n              label=\"Эрэмбэ\"\r\n              name={\"orderNo\"}\r\n              itemType=\"number\"\r\n              required\r\n            />\r\n            <FormItem\r\n              itemType=\"select\"\r\n              label=\"Төлөв\"\r\n              name={\"status\"}\r\n              dtsrc={eStatus}\r\n              required\r\n            />\r\n          </Row>\r\n        </Form>\r\n      </Skeleton>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default FactorForm;\r\n"],"names":["visible","handleClose","factorId","refreshTable","testId","Form","form","useState","loading","setLoading","factorType","setFactorType","eStatus","setEStatus","useEffect","getRequest","test","then","res","setFieldsValue","data","catch","error","message","Message","finally","getEFactorTypes","dict","getEStatus","onSubmit","validateFields","values","putRequest","postRequest","title","placement","closable","onClose","resetFields","width","footer","style","textAlign","onClick","layout","hideRequiredMark","scrollToFirstError","justify","gutter","label","name","required","itemType","dtsrc"],"sourceRoot":""}