{"version":3,"file":"static/js/dp-Category-Form.07e24cc1.chunk.js","mappings":"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","sources":["modules/category/views/Category/Form.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, message, Upload } from \"antd\";\r\nimport { Page, FormItem } from \"components\";\r\nimport { category, uploadFile } from \"api/endpoints\";\r\nimport { postRequest, getRequest, putRequest } from \"api\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { UploadOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst BusinessForm = () => {\r\n  const initialState = {\r\n    image: { src: \"\", isUpdated: false },\r\n    loading: false,\r\n    imageRespone: \"\",\r\n  };\r\n  const [image, setImage] = useState(initialState);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  let { categoryId } = useParams();\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  function getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  const [state, setState] = useState({\r\n    loading: false,\r\n    mode: \"NEW\",\r\n    data: {},\r\n  });\r\n\r\n  const breadcrumb = [\r\n    {\r\n      icon: \"IdcardOutlined\",\r\n      href: null,\r\n      text: \"Категори\",\r\n    },\r\n    {\r\n      icon: \"ApartmentOutlined\",\r\n      href: category.categories,\r\n      text: \"Категориудын жагсаалт\",\r\n    },\r\n    {\r\n      icon: \"FormOutlined\",\r\n      href: \"/\",\r\n      text: state.mode === \"NEW\" ? \"Категори бүртгэх\" : \"Категори засах\",\r\n    },\r\n  ];\r\n\r\n  const submit = async () => {\r\n    form\r\n      .validateFields()\r\n      .then(async (values) => {\r\n        if (state.mode === \"EDIT\") {\r\n          await putRequest(category.category, values);\r\n        } else {\r\n          await postRequest(category.category, {\r\n            ...values,\r\n            img: image.imageRespone,\r\n          });\r\n        }\r\n        message.success(\"Мэдээллийг амжилттай хадгаллаа.\");\r\n        // getProduct(values.prodCode);\r\n        navigate(category.categoryes);\r\n      })\r\n      .catch((err) => {\r\n        setState({ loading: false });\r\n        message.error(err.Message);\r\n      });\r\n  };\r\n\r\n  const getCategory = async (categoryId) => {\r\n    try {\r\n      setState({ loading: true });\r\n      const res = await getRequest(`${category.category}/${categoryId}`);\r\n      setState({ mode: \"EDIT\", loading: false, data: res.data });\r\n      form.setFieldsValue(res.data);\r\n    } catch (error) {\r\n      setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  const handleChange = async ({ file }) => {\r\n    try {\r\n      const formData = new FormData();\r\n      await formData.append(\"File\", file.originFileObj);\r\n      const res = await postRequest(uploadFile.uploadFile, formData);\r\n      if (file.status === \"uploading\") {\r\n        setImage({ ...image, loading: true, imageRespone: res.data });\r\n        return;\r\n      }\r\n      if (file.status === \"done\") {\r\n        getBase64(file.originFileObj, (imageUrl) =>\r\n          setImage({\r\n            ...image,\r\n            image: { src: imageUrl, isUpdated: true },\r\n            loading: false,\r\n            imageRespone: res.data,\r\n          })\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"caught an error\");\r\n      console.log(error);\r\n    }\r\n  };\r\n  // const handleAvatar = (info) => {\r\n  //   getBase64(info.file.originFileObj, (img) => {\r\n  //     setImage({ src: img, isLink: false });\r\n  //   });\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if (categoryId !== \"new\") {\r\n      getCategory(categoryId);\r\n    }\r\n  }, [categoryId]);\r\n\r\n  return (\r\n    <Page breadcrumb={breadcrumb}>\r\n      <Form form={form} initialValues={{ categoryId: \"\" }} layout=\"vertical\">\r\n        <Row gutter={[16]}>\r\n          <FormItem label=\"Нэр\" name={\"name\"} required span={8} />\r\n          <FormItem label=\"Тайлбар\" name={\"desc\"} required span={8} />\r\n          <Form.Item label=\"Зураг\" required>\r\n            <Upload\r\n              name=\"avatar\"\r\n              listType=\"picture-card\"\r\n              className=\"rank-upload\"\r\n              showUploadList={false}\r\n              customRequest={({ file, onSuccess }) => {\r\n                console.log(\"file->\", file);\r\n                setTimeout(() => {\r\n                  onSuccess(\"ok\");\r\n                }, 0.5);\r\n              }}\r\n              onChange={handleChange}\r\n            >\r\n              {image.image.src ? (\r\n                <img\r\n                  src={image.image.src}\r\n                  alt=\"avatar\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    objectFit: \"contain\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <div>\r\n                  {image.loading ? <LoadingOutlined /> : <UploadOutlined />}\r\n                  <div style={{ marginTop: 8 }}>Зураг оруулах</div>\r\n                </div>\r\n              )}\r\n            </Upload>\r\n          </Form.Item>\r\n\r\n          <FormItem label=\"OrderNo\" name={\"orderNo\"} required span={8} />\r\n\r\n          <FormItem\r\n            span={8}\r\n            itemType=\"select\"\r\n            label=\"Төлөв\"\r\n            name={\"status\"}\r\n            dtsrc={[\r\n              {\r\n                val: \"A\",\r\n                txt: \"Идэвхтэй\",\r\n                orderNo: 1,\r\n                filter: null,\r\n                filter2: null,\r\n              },\r\n              {\r\n                val: \"I\",\r\n                txt: \"Идэвхгүй\",\r\n                orderNo: 2,\r\n                filter: null,\r\n                filter2: null,\r\n              },\r\n            ]}\r\n            required\r\n          />\r\n          <FormItem span={24} itemType=\"button\" onClick={() => submit()} />\r\n        </Row>\r\n      </Form>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default BusinessForm;\r\n"],"names":["useState","image","src","isUpdated","loading","imageRespone","setImage","navigate","useNavigate","categoryId","useParams","Form","form","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","mode","data","state","setState","breadcrumb","icon","href","text","category","submit","validateFields","then","values","putRequest","postRequest","message","catch","err","Message","getCategory","getRequest","res","setFieldsValue","handleChange","file","formData","FormData","append","originFileObj","uploadFile","status","imageUrl","console","log","useEffect","initialValues","layout","gutter","label","name","required","span","listType","className","showUploadList","customRequest","onSuccess","setTimeout","onChange","alt","style","width","height","objectFit","marginTop","itemType","dtsrc","val","txt","orderNo","filter","filter2","onClick"],"sourceRoot":""}