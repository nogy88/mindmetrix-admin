{"version":3,"file":"static/js/dp-Test-FactorResultList.98dc97ad.chunk.js","mappings":"0PAgHA,UA1GA,SAA0B,GAMtB,IALFA,EAAO,EAAPA,QACAC,EAAQ,EAARA,SACAC,EAAQ,EAARA,SACAC,EAAW,EAAXA,YACAC,EAAY,EAAZA,aAEA,EAAeC,EAAAA,EAAAA,UAARC,GAAsB,YAAlB,GACX,GAA8BC,EAAAA,EAAAA,WAAS,GAAM,eAAtCC,EAAO,KAAEC,EAAU,MAE1BC,EAAAA,EAAAA,YAAU,WAaS,OAAbR,IAXFO,GAAW,IACXE,EAAAA,EAAAA,IAAW,GAAD,OAAIC,EAAAA,GAAAA,cAAiB,OAAGV,IAC/BW,MAAK,SAACC,GACLR,EAAKS,eAAeD,EAAIE,KAC1B,IACCC,OAAM,SAACC,GACNC,EAAAA,GAAAA,MAAc,wEAAD,OAAkBD,EAAME,SACvC,IACCC,SAAQ,kBAAMZ,GAAW,EAAM,IAKtC,GAAG,CAACP,IAEJ,IAAMoB,EAAQ,yCAAG,mFACfhB,EACGiB,iBACAV,KAAI,yCAAC,WAAOW,GAAM,sEACA,GAAjBf,GAAW,IACPP,EAAS,CAAD,gCACJuB,EAAAA,EAAAA,IAAWb,EAAAA,GAAAA,cAAkB,kBAC9BY,GAAM,IACTvB,SAAUA,EACVC,SAAUA,KACT,KAAD,yCAEIwB,EAAAA,EAAAA,IAAYd,EAAAA,GAAAA,cAAkB,kBAC/BY,GAAM,IACTvB,SAAUA,KACT,KAAD,EAEJkB,EAAAA,GAAAA,QAAgB,kHAChBf,IACAK,GAAW,GACXN,IAAc,4CACf,mDAlBI,IAmBJc,OAAM,SAACC,GACNC,EAAAA,GAAAA,MAAcD,EAAME,SACpBX,GAAW,EACb,IAAG,2CACN,kBA1Ba,mCAiCd,OACE,SAAC,IAAM,CACLT,QAASA,EACT2B,MACEzB,EAAW,2IAA+B,2IAE5C0B,UAAW,QACXC,UAAU,EACVC,QAbe,WACjB3B,IACAG,EAAKyB,aACP,EAWIC,MAAO,IACPC,QACE,gBAAKC,MAAO,CAAEC,UAAW,SAAU,UACjC,SAAC,KAAY,CAACC,QAAS,kBAAMd,GAAU,MAE1C,UAGD,SAAC,IAAQ,CAACd,QAASA,EAAQ,UACzB,SAAC,IAAI,CACH6B,OAAO,WACPC,kBAAgB,EAEhBC,oBAAkB,EAClBjC,KAAMA,EAAK,UAEX,UAAC,IAAG,CAACkC,QAAQ,SAASC,OAAQ,GAAG,WAC/B,SAAC,KAAQ,CAACC,MAAM,6CAAUC,KAAM,OAAQC,UAAQ,KAChD,SAAC,KAAQ,CACPF,MAAM,oDACNC,KAAM,WACNE,SAAS,SACTD,UAAQ,KAEV,SAAC,KAAQ,CACPF,MAAM,oDACNC,KAAM,WACNE,SAAS,SACTD,UAAQ,YAtBX,SA6BX,C,gHCMA,UA5GA,SAA0B,GAAe,IAAb3C,EAAQ,EAARA,SAC1B,GAA8BM,EAAAA,EAAAA,WAAS,GAAM,eAAtCuC,EAAO,KAAEC,EAAU,KAC1B,GAA8BxC,EAAAA,EAAAA,WAAS,GAAM,eAA7BE,GAAF,KAAY,MAC1B,GAA0CF,EAAAA,EAAAA,UAAS,IAAG,eAAhCyC,GAAF,KAAkB,MACtC,GAAkCzC,EAAAA,EAAAA,UAAS,CACzCP,SAAS,EACTE,SAAU,OACV,eAHK+C,EAAS,KAAEC,EAAY,KA8D9B,OAzDAxC,EAAAA,EAAAA,YAAU,WAkBS,OAAbT,IAhBFQ,GAAW,IACXE,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,cAAoB,CAC7BX,SAAUA,EACVkD,IAAK,EACLC,MAAO,MAENvC,MAAK,SAACC,GACLkC,EAAiBlC,EAAIE,KAAKqC,SAC1BC,QAAQC,IAAIzC,EAAIE,KAAKqC,QACvB,IACCpC,OAAM,SAACC,GACNC,EAAAA,GAAAA,MAAc,wEAAD,OAAkBD,EAAME,SACvC,IACCC,SAAQ,kBAAMZ,GAAW,EAAM,IAItC,GAAG,CAACR,EAAU6C,KAuCZ,iBAAKZ,MAAO,CAAEsB,QAAS,aAAc,WACnC,SAAC,KAAW,CACV7B,MAAO,4GACP8B,WAAY,CAAC,YACbC,QA7BU,CAOd,CACE/B,MAAO,6CACPgC,UAAW,OACXC,MAAO,UAET,CACEjC,MAAO,oDACPgC,UAAW,WACXC,MAAO,UAET,CACEjC,MAAO,oDACPgC,UAAW,WACXC,MAAO,WAULC,SAAUjD,EAAAA,GAAAA,aACVkD,UAAWlD,EAAAA,GAAAA,cACXmD,QAAS,kBAAMb,EAAa,CAAEhD,SAAU,KAAMF,SAAS,GAAO,EAC9DgE,OAAQ,SAACC,GAAG,OAAKf,EAAa,CAAEhD,SAAU+D,EAAKjE,SAAS,GAAO,EAC/DkE,aAAc,CAAEjE,SAAUA,GAC1B6C,QAASA,KAoBX,SAAC,UAAgB,CACf9C,QAASiD,EAAUjD,QACnBC,SAAUA,EACVC,SAAU+C,EAAU/C,SACpBC,YAAa,kBAAM+C,EAAa,CAAEhD,SAAU,KAAMF,SAAS,GAAQ,EACnEI,aAAc,kBAAM2C,GAAYD,EAAQ,MAIhD,C","sources":["modules/test/views/Test/FactorResultForm.js","modules/test/views/Test/FactorResultList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Drawer, message, Form, Row, Skeleton } from \"antd\";\r\nimport { CustomButton, FormItem } from \"components\";\r\nimport { getRequest, postRequest, putRequest } from \"api\";\r\nimport { test } from \"api/endpoints\";\r\n\r\nfunction FactorResultForm({\r\n  visible,\r\n  factorId,\r\n  resultId,\r\n  handleClose,\r\n  refreshTable,\r\n}) {\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getFactorResult = () => {\r\n      setLoading(true);\r\n      getRequest(`${test.factorResult}${resultId}`)\r\n        .then((res) => {\r\n          form.setFieldsValue(res.data);\r\n        })\r\n        .catch((error) => {\r\n          message.error(`Алдаа гарлаа. ${error.Message}`);\r\n        })\r\n        .finally(() => setLoading(false));\r\n    };\r\n\r\n    if (resultId !== null) getFactorResult();\r\n    // eslint-disable-next-line\r\n  }, [resultId]);\r\n\r\n  const onSubmit = async () => {\r\n    form\r\n      .validateFields()\r\n      .then(async (values) => {\r\n        setLoading(true);\r\n        if (resultId) {\r\n          await putRequest(test.factorResult, {\r\n            ...values,\r\n            factorId: factorId,\r\n            resultId: resultId,\r\n          });\r\n        } else {\r\n          await postRequest(test.factorResult, {\r\n            ...values,\r\n            factorId: factorId,\r\n          });\r\n        }\r\n        message.success(\"Амжилттай хадгаллаа.\");\r\n        refreshTable();\r\n        setLoading(false);\r\n        handleClose();\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.Message);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const setInitial = () => {\r\n    handleClose();\r\n    form.resetFields();\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      visible={visible}\r\n      title={\r\n        resultId ? \"Хүчин зүйлийн үр дүн засах\" : \"Хүчин зүйлийн үр дүн нэмэх\"\r\n      }\r\n      placement={\"right\"}\r\n      closable={false}\r\n      onClose={setInitial}\r\n      width={400}\r\n      footer={\r\n        <div style={{ textAlign: \"right\" }}>\r\n          <CustomButton onClick={() => onSubmit()} />\r\n        </div>\r\n      }\r\n      key={\"factor\"}\r\n    >\r\n      <Skeleton loading={loading}>\r\n        <Form\r\n          layout=\"vertical\"\r\n          hideRequiredMark\r\n          // size=\"small\"\r\n          scrollToFirstError\r\n          form={form}\r\n        >\r\n          <Row justify=\"center\" gutter={32}>\r\n            <FormItem label=\"Тайлбар\" name={\"desc\"} required />\r\n            <FormItem\r\n              label=\"Доод оноо\"\r\n              name={\"scoreMin\"}\r\n              itemType=\"number\"\r\n              required\r\n            />\r\n            <FormItem\r\n              label=\"Дээд оноо\"\r\n              name={\"scoreMax\"}\r\n              itemType=\"number\"\r\n              required\r\n            />\r\n          </Row>\r\n        </Form>\r\n      </Skeleton>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default FactorResultForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Popconfirm, Tag, message } from \"antd\";\r\nimport { getRequest, deleteRequest } from \"api\";\r\nimport { test } from \"api/endpoints\";\r\nimport { CustomTable, TableHeader } from \"components\";\r\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport FactorResultForm from \"./FactorResultForm\";\r\n\r\nfunction FactorResultList({ factorId }) {\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [factorResults, setFactorResults] = useState([]);\r\n  const [modalData, setModalData] = useState({\r\n    visible: false,\r\n    resultId: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getFactorResults = () => {\r\n      setLoading(true);\r\n      getRequest(test.factorResults, {\r\n        factorId: factorId,\r\n        Pid: 1,\r\n        Psize: 100,\r\n      })\r\n        .then((res) => {\r\n          setFactorResults(res.data.results);\r\n          console.log(res.data.results);\r\n        })\r\n        .catch((error) => {\r\n          message.error(`Алдаа гарлаа. ${error.Message}`);\r\n        })\r\n        .finally(() => setLoading(false));\r\n    };\r\n\r\n    if (factorId !== null) getFactorResults();\r\n  }, [factorId, refresh]);\r\n\r\n  const handleDelete = (id) => {\r\n    deleteRequest(`${test.feelingAnswer}${id}`)\r\n      .then((res) => {\r\n        message.success(\"Мэдээллийг амжилттай устгалаа.\");\r\n        // to fetch data\r\n        setRefresh(!refresh);\r\n      })\r\n      .catch((err) => {\r\n        message.error(`Алдаа гарлаа: ${err.Message}`);\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    // {\r\n    //   title: \"Код\",\r\n    //   dataIndex: \"resultId\",\r\n    //   width: \"10%\",\r\n    //   align: \"center\",\r\n    // },\r\n    {\r\n      title: \"Тайлбар\",\r\n      dataIndex: \"desc\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Доод оноо\",\r\n      dataIndex: \"scoreMin\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Дээд оноо\",\r\n      dataIndex: \"scoreMax\",\r\n      align: \"center\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div style={{ padding: \"10px 40px\" }}>\r\n      <CustomTable\r\n        title={\"Хүчин зүйлийн үр дүн\"}\r\n        primaryKey={[\"resultId\"]}\r\n        columns={columns}\r\n        endpoint={test.factorResult}\r\n        endpoints={test.factorResults}\r\n        addFunc={() => setModalData({ resultId: null, visible: true })}\r\n        onEdit={(val) => setModalData({ resultId: val, visible: true })}\r\n        otherFilters={{ factorId: factorId }}\r\n        refresh={refresh}\r\n      />\r\n      {/* <Table\r\n        columns={columns}\r\n        dataSource={factorResults}\r\n        rowKey={(record) => record.resultId}\r\n        loading={loading}\r\n        size=\"small\"\r\n        // bordered\r\n        title={() => {\r\n          return (\r\n            <TableHeader\r\n              title=\"Хүчин зүйлийн үр дүн\"\r\n              addFunc={() => {\r\n                setModalData({ resultId: null, visible: true });\r\n              }}\r\n            />\r\n          );\r\n        }}\r\n      /> */}\r\n      <FactorResultForm\r\n        visible={modalData.visible}\r\n        factorId={factorId}\r\n        resultId={modalData.resultId}\r\n        handleClose={() => setModalData({ resultId: null, visible: false })}\r\n        refreshTable={() => setRefresh(!refresh)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FactorResultList;\r\n"],"names":["visible","factorId","resultId","handleClose","refreshTable","Form","form","useState","loading","setLoading","useEffect","getRequest","test","then","res","setFieldsValue","data","catch","error","message","Message","finally","onSubmit","validateFields","values","putRequest","postRequest","title","placement","closable","onClose","resetFields","width","footer","style","textAlign","onClick","layout","hideRequiredMark","scrollToFirstError","justify","gutter","label","name","required","itemType","refresh","setRefresh","setFactorResults","modalData","setModalData","Pid","Psize","results","console","log","padding","primaryKey","columns","dataIndex","align","endpoint","endpoints","addFunc","onEdit","val","otherFilters"],"sourceRoot":""}